{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.tsx","components/auth/LoginScreen.jsx","components/ui/Navbar.jsx","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.jsx","actions/ui.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.jsx","components/router/PrivateRoute.js","components/router/PublicRoute.js","components/router/AppRouter.jsx","CalendarApp.jsx","index.tsx"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","event","id","filter","auth","uid","name","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","e","start","Date","end","eventAddNew","eventSetActive","eventClearActive","eventUpdate","eventDelete","eventLoaded","startLogout","dispatch","clear","logout","login","user","checkingFinish","useForm","useState","values","setValues","target","value","newFormState","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","response","json","ok","setItem","getTime","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","moment","minute","seconds","add","nowPlus1","clone","initEvent","notes","toDate","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","text","icon","confirmButtonText","trim","length","resp","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","message","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadiums","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","children","to","PublicRoute","AppRouter","path","element","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ac5fe4a.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[UI] Open modal',\n    uiCloseModal: '[UI] Close modal',\n\n    eventSetActive: '[EVENT] Set active event',\n    eventClean: '[EVENT] Clean event',\n\n    eventStartAddNew: '[EVENT] Start add new event',\n    eventAddNew: '[EVENT] Add new event',\n    eventDelete: '[EVENT] Delete event',\n    eventClearActive: '[EVENT] Clear active event',\n    eventUpdate: '[EVENT] Update event',\n    eventLoaded: '[EVENT] Event loaded',\n\n    authCheckingFinish: '[AUTH] Finish checking login state',\n    authStartLogin: '[AUTH] Start login',\n    authLogin: '[AUTH] Login',\n    authStartRegister: '[AUTH] Start register', \n    authStartTokenRenew: '[AUTH] Start token Renew',\n    authLogout: '[AUTH] Logout'\n    \n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true\n}\n\nexport const authReducer = (state = initialState, action) => {\n    \n    switch (action.type) {\n        \n        case types.authStartLogin:\n            return {\n                ...state,\n                uid: action.payload.uid,\n                name: action.payload.name\n            }\n\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n        \n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\n\n// {\n//     id: new Date().getTime(),\n//     title: 'Cumpleaños',\n//     start: moment().toDate(),\n//     end: moment().add(2, 'hours').toDate(),\n//     notes: 'comprar torta',\n//     user: {\n//         _id: '123',\n//         name: 'pipo'\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n}\n\nexport const calendarReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n        \n        case types.eventClearActive:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventUpdate:\n            return {\n                ...state,\n                events: state.events.map(\n                    event => event.id === action.payload.id\n                        ? action.payload\n                        : event\n                )\n            }\n        \n        case types.eventDelete:\n            return {\n                ...state,\n                events: state.events.filter(\n                    event => event.id !== state.activeEvent.id\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload]\n            }\n\n        case types.eventClean:\n            return {\n                ...initialState\n            }\n    \n        default:\n            return state;\n    }\n}","import { types } from '../types/types';\n\nconst initialState = {\n    modalOpen: false\n}\n\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}\n","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\n//  for TS\n// const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)","const baseUrl = process.env.REACT_APP_API_URL;\n\n\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${baseUrl}/${endpoint}`;\n\n    if(method === 'GET'){\n        return fetch(url);\n    } else{\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n    }\n}\n\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\n\n    const url = `${baseUrl}/${endpoint}`;\n    const token = localStorage.getItem('token') || ''; // ''  para que no rebiente cuando sea null\n\n    if(method === 'GET'){\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else{\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        })\n    }\n}\n\nexport {\n    fetchWithToken,\n    fetchWithoutToken\n}","// import moment from \"moment\";\n\n\nexport const prepareEvents = (events = []) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            // end: moment(e.end).toDate,\n            // start: moment(e.start).toDate\n            start: new Date(e.start),\n            end: new Date(e.end)\n        })\n    )\n\n}","import Swal from \"sweetalert2\";\nimport { fetchWithToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\"\n\nexport const eventStartAddNew = (event) => {\n    return async (dispatch, getState) => {\n\n        const {uid, name} = getState().auth;\n\n        try {\n            const resp = await fetchWithToken('events', event, 'POST');\n            const body = await resp.json();\n    \n            if(body.ok){\n                event.id = body.event.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log(event);\n                dispatch(eventAddNew(event));\n            }\n    \n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n})\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n})\nexport const eventClearActive = () => ({\n    type: types.eventClearActive\n})\n\nexport const eventStartUpdate = (event) => {\n    return async (dispatch) => {\n        try {\n            // const {uid} = getState().auth;\n\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\n            const body = await resp.json();\n    \n            if(body.ok){\n                dispatch(eventUpdate(event));\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst eventUpdate = (event) => ({\n    type: types.eventUpdate,\n    payload: event\n})\n\nexport const eventStartDelete = () => {\n    return async(dispatch, getState) => {\n\n        const {id} = getState().calendar.activeEvent;\n\n        try {\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\n            const body = await resp.json();\n\n            if(body.ok){\n                dispatch(eventDelete());\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst eventDelete = () => ({\n    type: types.eventDelete\n})\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n\n            const resp = await fetchWithToken('events');\n            const body = await resp.json();\n            \n            // const events = body.event;\n            const events = prepareEvents(body.event);\n\n            dispatch(eventLoaded(events));\n\n        } catch (error) {\n            Swal.fire('Error', error.message, 'error');\n        }\n\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventClean = () => ({\n    type: types.eventClean\n})","import Swal from \"sweetalert2\";\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport { eventClean } from \"./events\";\n\n\nexport const startLogin = (email, password) => {\n    return async(dispatch) => {\n\n        const response = await fetchWithoutToken('auth', {email, password}, 'POST');\n\n        const body = await response.json();\n\n        if(body.ok){\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n        }\n    }\n}\n\nexport const startRegister = (name, email, password) => {\n    return async (dispatch) => {\n\n        const response = await fetchWithoutToken('auth/new', {name, email, password}, 'POST');\n\n        const body = await response.json();\n\n        if(body.ok){\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n        }\n    }\n}\n\nexport const startChecking = () => {\n    return async (dispatch) => {\n\n        const response = await fetchWithToken('auth/renew');\n\n        const body = await response.json();\n\n        if(body.ok){\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        }else{\n            dispatch(checkingFinish());\n        }\n    }\n}\n\nexport const startLogout = () => {\n    return (dispatch) =>{\n        localStorage.clear();\n        dispatch(logout());\n        dispatch(eventClean());\n    }\n}\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nconst checkingFinish = () => ({\n    type: types.authCheckingFinish\n})\n\nexport const logout = () => ({\n    type: types.authLogout\n})","import { ChangeEvent, useState } from 'react';\n\n\nexport const useForm = <T extends Object>( initialState: T ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = ( newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n\n    const dispatch = useDispatch();\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: \"pipo@gmail.com\",\n        lPassword: \"123456\"\n    });\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName: \"Chiquillo\",\n        rEmail: \"Chiquillo@gmail.com\",\n        rPassword1: \"123456\",\n        rPassword2: \"123456\"\n    });\n\n    const {lEmail, lPassword} = formLoginValues;\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        dispatch(startLogin(lEmail, lPassword));\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if(rPassword1 !== rPassword2){\n            return Swal.fire('Error', 'Passwords don\\'t match', 'error');\n        }\n\n        dispatch(startRegister(rName, rEmail, rPassword1));\n    }\n    \n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={lPassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\"\n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"rPassword1\"\n                                value={rPassword1}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\"\n                                name=\"rPassword2\"\n                                value={rPassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n\n    const {name} = useSelector(state => state.auth)\n    \n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n\n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={handleLogout}    \n            >\n                <i className=\"fas fa-sign-out-alt\" />\n                <span> Salir</span>\n            </button>\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({event}) => {\n    \n    const {title, user} = event;\n\n    return (\n        <div>\n            <strong>{title}</strong>\n            <span> - {user.name}</span>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n});\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n})","import React, { useEffect, useState } from 'react'\n\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\nimport { uiCloseModal } from '../../actions/ui';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { eventClearActive, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\n// idealmente esto va en un helper como por ejemplo centerModalStyles\nconst customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n};\n\nModal.setAppElement('#root');\n\nconst now = moment().minute(0).seconds(0).add(1, 'hours');\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\nexport const CalendarModal = () => {\n\n    const dispatch = useDispatch();\n    \n    const {modalOpen} = useSelector(state => state.ui);\n    const {activeEvent} = useSelector(state => state.calendar);\n    \n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n    \n    const [formValues, setFormValues] = useState(initEvent);\n    \n    const {notes, title, start, end} = formValues;\n    \n    useEffect(() => {\n        if(activeEvent){\n            setFormValues(activeEvent);\n        }else{\n            setFormValues(initEvent);\n        }\n\n    }, [activeEvent,setFormValues]);\n\n    const handleInputChange = ({target}) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        })\n    }\n\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n        dispatch(eventClearActive());\n        setFormValues(initEvent);\n    }\n\n    const handleStartDateChange = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n\n    const handleEndDateChange = (e) => {\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if( momentStart.isSameOrAfter(momentEnd)) {\n            Swal.fire({\n                title: 'Error',\n                text: 'Fecha de fin debe ser posterior a la fecha de inicio',\n                icon: 'error',\n                confirmButtonText: 'OK'\n            });\n            return\n        }\n\n        if(title.trim().length < 2){\n            setTitleValid(false);\n            return\n        }\n\n        \n        if(activeEvent){\n            dispatch(eventStartUpdate(formValues));\n        }else{\n            dispatch(eventStartAddNew(formValues));\n        }\n\n        setTitleValid(true);\n        closeModal();\n    }\n\n    return (\n        \n        <Modal\n                isOpen={modalOpen}\n                // onAfterOpen={afterOpenModal}\n                onRequestClose={closeModal}\n                style={customStyles}\n                className=\"modal\"\n                overlayClassName=\"modal-fondo\"\n                closeTimeoutMS={200}\n            >\n                {\n                    activeEvent\n                        ? <h1> Editar evento </h1>\n                        : <h1> Nuevo evento </h1>\n                }\n\n                <hr />\n                <form \n                    className=\"container\"\n                    onSubmit={handleSubmitForm}\n                >\n\n                    <div className=\"form-group\">\n                        <label>Fecha y hora inicio</label>\n                        <DateTimePicker\n                            onChange={handleStartDateChange}\n                            value={dateStart}\n                            className=\"form-control\"\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Fecha y hora fin</label>\n                        <DateTimePicker\n                            onChange={handleEndDateChange}\n                            value={dateEnd}\n                            minDate={dateStart}\n                            className=\"form-control\"\n                        />\n                    </div>\n\n                    <hr />\n                    <div className=\"form-group\">\n                        <label>Título y notas</label>\n                        <input \n                            type=\"text\" \n                            className={`form-control ${!titleValid && 'is-invalid'}`}\n                            placeholder=\"Título del evento\"\n                            name=\"title\"\n                            autoComplete=\"off\"\n                            value={title}\n                            onChange={handleInputChange}\n                        />\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <textarea \n                            type=\"text\" \n                            className=\"form-control\"\n                            placeholder=\"Descripción del evento\"\n                            rows=\"5\"\n                            name=\"notes\"\n                            value={notes}\n                            onChange={handleInputChange}\n                        ></textarea>\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                    </div>\n\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-outline-primary btn-block\"\n                    >\n                        <i className=\"far fa-save\"></i>\n                        <span> Guardar</span>\n                    </button>\n                </form>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { eventClearActive } from '../../actions/events';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n        dispatch(eventClearActive());\n        dispatch(uiOpenModal());\n    }\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={handleClick}\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n        dispatch(eventStartDelete());\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={handleClick}\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import { useEffect, useState } from 'react';\nimport {Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { uiOpenModal } from '../../actions/ui';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { eventClearActive, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\n// const events = [{\n//     title: 'Cumpleaños',\n//     start: moment().toDate(),\n//     end: moment().add(2, 'hours').toDate(),\n//     bgcolor: '#fafafa',\n//     notes: 'comprar torta',\n//     user: {\n//         _id: '123',\n//         name: 'pipo'\n//     }\n// }]\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const {events, activeEvent} = useSelector(state => state.calendar);\n    const {uid} = useSelector(state => state.auth);\n\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n    useEffect(() => {\n        dispatch(eventStartLoading());\n    }, [dispatch])\n\n    const onDoubleClick = (e) => {\n        dispatch(eventSetActive(e));\n        dispatch(uiOpenModal());\n    }\n    \n    const onSelectEvent = (e) => {\n        dispatch(eventSetActive(e));\n        // dispatch(uiOpenModal());\n    }\n    \n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        dispatch(eventClearActive());\n    }\n    \n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n\n        const style = {\n            backgroundColor: (uid===event.user._id) ? '#367CF7' : '#465660',\n            borderRadiums: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                eventPropGetter={eventStyleGetter}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                onSelectSlot={onSelectSlot}\n                selectable={true}\n                view={lastView}\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n            <AddNewFab />\n            {activeEvent && <DeleteEventFab />}\n\n            <CalendarModal />\n\n    \n\n        </div>\n    )\n}\n","// import React from 'react'\n// import PropTypes from 'prop-types'\n\n// import { Route, Navigate } from 'react-router-dom'\n\n// export const PrivateRoute = ({\n//     isAuthenticated,\n//     component: Component,\n//     ...rest\n// }) => {\n    \n//     // solo tenemos una ruta por lo que no se necesita\n//     // localStorage.setItem('lastPath', rest.location.pathname);\n\n//     return (\n//         <Route {...rest}\n//             component={ (props)=> (\n//                 (isAuthenticated)\n//                     ? ( <Component {...props} />) // sí está autenticado\n//                     : ( <Navigate to=\"/\" />) // no está autenticado\n//             )}\n\n//         />\n//     )\n// }\n\n// PrivateRoute.propTypes = {\n//     isAuthenticated: PropTypes.bool.isRequired,\n//     component: PropTypes.func.isRequired\n// }\n\n\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n \n \n \nconst PrivateRoute = ({children}) => {\n    \nconst {uid} = useSelector(state => state.auth)\n    return (\n        !!uid\n        ?   children  \n        :  <Navigate to=\"/login\" />\n    )              \n}\n \n \nexport default PrivateRoute;","// import React from 'react'\n// import { Navigate, Route } from 'react-router'\n// import PropTypes from 'prop-types'\n\n\n// export const PublicRoute = ({\n//     isAuthenticated,\n//     component: Component,\n//     ...rest\n// }) => {\n//     return (\n//         <Route {...rest} \n//             component={ (props) => (\n//                 (isAuthenticated)\n//                     ? ( <Navigate to=\"/\" /> ) // sí está autenticado\n//                     : ( <Component {...props} /> ) // no está autenticado\n//             )}\n//         />\n\n//     )\n// }\n\n// PublicRoute.propTypes = {\n//     isAuthenticated: PropTypes.bool.isRequired,\n//     component: PropTypes.func.isRequired\n// } \n\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n \nconst PublicRoute = ({children}) => {\n    const {uid} = useSelector(state => state.auth)\n  \n    return ( !!uid\n        ? <Navigate to=\"/\" />\n        : children \n        \n        )\n        \n}\n \nexport default PublicRoute;","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter,\n    Routes,\n    Route,\n  } from \"react-router-dom\";\nimport { startChecking } from '../../actions/auth';\nimport { LoginScreen } from '../auth/LoginScreen';\nimport { CalendarScreen } from '../calendar/CalendarScreen';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const {checking} = useSelector(state => state.auth);\n\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch]);\n\n    if(checking){\n        return <h5>Loading...</h5>\n    }   \n\n    return (\n        <BrowserRouter>\n          <Routes>\n          <Route path=\"/login\" element={\n                    <PublicRoute>\n                        <LoginScreen />\n                    </PublicRoute>\n                } \n                />\n          \n          <Route path=\"/*\"  element ={\n                  <PrivateRoute>\n                       <CalendarScreen/>\n                  </PrivateRoute>\n              }\n          />\n          {/* <Route path=\"*\" element={<CalendarScreen />} />   */}\n \n        </Routes>\n        </BrowserRouter>\n    )\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport { store } from './store/store'\nimport { AppRouter } from './components/router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}